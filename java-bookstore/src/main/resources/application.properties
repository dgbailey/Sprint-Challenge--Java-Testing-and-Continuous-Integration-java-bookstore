#server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

server.error.whitelabel.enabled=false

# needed for h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


spring.main.allow-bean-definition-overriding=true
# needed for Postgresql
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-23-23-228-132.compute-1.amazonaws.com:5432/d4jn78m3qioh55?user=xqyphnjjcmnmez&password=7592375abf8fa61a95e129e0628b6b937a8dfd8e12a69af2f7dd9575ae570f53&sslmode=require}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME:xqyphnjjcmnmez}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:7592375abf8fa61a95e129e0628b6b937a8dfd8e12a69af2f7dd9575ae570f53}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always
#jdbc:h2:mem:testdb

#error handling


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-107-20-230-70.compute-1.amazonaws.com:5432/d88vlgrp6o1req}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:eznypjspjjxxyr}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:b325667b5e3d51028ddd25c100b0cfe73bada3b291e3bac39e040558f2273b9b}
